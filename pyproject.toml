[project]
name = "memray"
version = "1.11.0"
description = "A memory profiler for Python applications"
readme = "README.md"
requires-python = ">=3.7.0"
license = { text = "Apache 2.0" }
authors = [{ name = "Pablo Galindo Salgado" }]
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Debuggers",
]
dependencies = [
  "jinja2 >= 2.9",
  "typing_extensions; python_version < '3.8.0'",
  "rich >= 11.2.0",
  "textual >= 0.41.0",
]

[project.optional-dependencies]
test = [
  "Cython",
  "greenlet; python_version < '3.12'",
  "pytest",
  "pytest-cov",
  "ipython",
  "setuptools; python_version >= '3.12'",
  "pytest-textual-snapshot",
]
docs = [
  "IPython",
  "bump2version",
  "sphinx",
  "furo",
  "sphinx-argparse",
  "towncrier",
]
lint = ["black", "flake8", "isort", "mypy", "check-manifest"]
benchmark = ["asv"]
dev = [
  "Cython",
  "greenlet; python_version < '3.12'",
  "pytest",
  "pytest-cov",
  "ipython",
  "setuptools; python_version >= '3.12'",
  "pytest-textual-snapshot",
  "black",
  "flake8",
  "isort",
  "mypy",
  "check-manifest",
  "IPython",
  "bump2version",
  "sphinx",
  "furo",
  "sphinx-argparse",
  "towncrier",
  "asv",
]

[project.urls]
Homepage = "https://github.com/bloomberg/memray"

[project.scripts]
memray = "memray.__main__:main"
"memray3.7" = "memray.__main__:main"
"memray3.8" = "memray.__main__:main"
"memray3.9" = "memray.__main__:main"
"memray3.10" = "memray.__main__:main"
"memray3.11" = "memray.__main__:main"
"memray3.12" = "memray.__main__:main"

[build-system]
requires = ["scikit-build-core", "cython"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
wheel.packages = ["src/memray"]


[tool.ruff]
line-length = 95
select = ["C4", "E", "F", "I001", "PERF", "W"]
fix = true

[tool.ruff.isort]
force-single-line = true
known-first-party = ["memray"]
known-third-party = ["rich", "elftools", "pytest"]

[tool.ruff.per-file-ignores]
"benchmarks/*" = ["C4", "PERF"]

[tool.isort]
force_single_line = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
known_first_party = ["memray"]
known_third_party = ["rich", "elftools", "pytest"]

[tool.towncrier]
package = "memray"
package_dir = "src"
filename = "NEWS.rst"
directory = "news"
type = [
  { name = "Features", directory = "feature", showcontent = true },
  { name = "Deprecations and Removals", directory = "removal", showcontent = true },
  { name = "Bug Fixes", directory = "bugfix", showcontent = true },
  { name = "Improved Documentation", directory = "doc", showcontent = true },
  { name = "Miscellaneous", directory = "misc", showcontent = true },
]
underlines = "-~"

[tool.pytest.ini_options]
markers = ["valgrind"]
xfail_strict = true

[tool.check-manifest]
ignore = ["src/memray/reporters/templates/assets/*.js"]

[tool.mypy]
exclude = "tests/integration/(native_extension|multithreaded_extension)/"

[tool.cibuildwheel]
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]
skip = "*musllinux*{i686,aarch64}*"
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"

[[tool.cibuildwheel.overrides]]
select = "cp3{7,8,9,10}-*"
manylinux-x86_64-image = "manylinux2010"
manylinux-i686-image = "manylinux2010"

[tool.cibuildwheel.linux]
before-all = [
  "yum install -y libunwind-devel lz4-devel gdb",
  "if ! yum install -y lldb; then echo lldb is not available; fi",
]

[tool.cibuildwheel.macos]
before-all = [
  "git clone --depth 1 --branch v1.9.4 https://github.com/lz4/lz4 lz4",
  "cd lz4",
  "make",
  "make install DESTDIR=/tmp/lz4_install",
]
before-test = [
  "codesign --remove-signature /Library/Frameworks/Python.framework/Versions/*/bin/python3 || true",
  "codesign --remove-signature /Library/Frameworks/Python.framework/Versions/*/Resources/Python.app/Contents/MacOS/Python || true",
]

[tool.coverage.run]
plugins = ["Cython.Coverage"]
source = ["src/memray", "tests/"]
branch = true
parallel = true
omit = ["*__init__.py"]

[tool.coverage.report]
skip_covered = true
show_missing = true


# Override the default linux before-all for musl linux
[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = ["apk add --update libunwind-dev lz4-dev gdb lldb"]
